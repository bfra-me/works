import {defineConfig} from 'vitest/config'

export default defineConfig({
  test: {
    globals: false,
    environment: 'node',
    include: ['test/**/*.test.ts'<% if (it.hasReact) { %>, 'test/**/*.test.tsx'<% } %>],<% if (it.packageType === 'config' || it.packageType === 'tool') { %>
    setupFiles: ['test/setup.ts'],<% } %>
    // Enable concurrent testing for performance
    pool: 'threads',
    poolOptions: {
      threads: {
        minThreads: 1,
        maxThreads: 4
      }
    },
    // Test timeouts
    testTimeout: 10000,
    hookTimeout: 10000,
    // Snapshot configuration
    snapshotFormat: {
      escapeString: false,
      printBasicPrototype: false
    },
    coverage: {
      provider: 'v8',
      reporter: ['text', 'json', 'html', 'lcov'],
      reportOnFailure: true,
      skipFull: false,<% if (it.packageType === 'config') { %>
      thresholds: {
        lines: 80,
        functions: 80,
        branches: 70,
        statements: 80
      },<% } else if (it.packageType === 'tool' || it.hasCLI) { %>
      thresholds: {
        lines: 90,
        functions: 85,
        branches: 80,
        statements: 90
      },<% } else { %>
      thresholds: {
        lines: 95,
        functions: 90,
        branches: 90,
        statements: 95
      },<% } %>
      include: ['src/**/*.ts'<% if (it.hasReact) { %>, 'src/**/*.tsx'<% } %>],
      exclude: [
        'coverage/**',<% if (!it.isTypeOnly) { %>
        'lib/**',<% } %>
        'node_modules/**',
        'test/**',<% if (it.packageType === 'config') { %>
        'scripts/**',<% } %>
        '*.config.*',
        'src/**/*.d.ts',
        'src/**/*.test.ts',
        'src/**/*.spec.ts'
      ]
    },
    // Mock configuration
    deps: {
      inline: [
        // Inline dependencies for better performance
      ]
    },
    // Browser configuration for component testing
    browser: {
      enabled: false, // Enable if needed for browser tests
      name: 'chrome',
      headless: true
    }
  },
  // Shared configuration
  define: {
    __TEST__: true,
    __VERSION__: JSON.stringify('<%= it.version %>')
  }
})
