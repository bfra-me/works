{
  "basic-usage": "import { defineConfig } from '@bfra.me/semantic-release'\n\nexport default defineConfig({\n  branches: ['main'],\n  repositoryUrl: 'https://github.com/user/repo',\n  plugins: [\n    '@semantic-release/commit-analyzer',\n    '@semantic-release/release-notes-generator',\n    '@semantic-release/npm'\n  ]\n})",
  "preset-usage": "import { npmPreset, defineConfig } from '@bfra.me/semantic-release'\n\nexport default defineConfig(npmPreset({\n  repositoryUrl: 'https://github.com/user/npm-package'\n}))",
  "composition-usage": "import { defineConfig, mergeConfigs, npmPreset, githubPreset } from '@bfra.me/semantic-release'\n\nconst base = npmPreset({\n  repositoryUrl: 'https://github.com/user/package'\n})\n\nconst github = githubPreset({\n  repositoryUrl: 'https://github.com/user/package'\n})\n\nexport default defineConfig(mergeConfigs(base, github))",
  "builder-usage": "import { ConfigBuilder } from '@bfra.me/semantic-release'\n\nexport default new ConfigBuilder()\n  .branches(['main', 'next'])\n  .repositoryUrl('https://github.com/user/repo')\n  .addPlugin('@semantic-release/commit-analyzer')\n  .addPlugin('@semantic-release/release-notes-generator')\n  .addPlugin('@semantic-release/npm')\n  .build()",
  "factory-usage": "import { createReleaseConfig } from '@bfra.me/semantic-release/factories'\n\nexport default createReleaseConfig({\n  type: 'npm',\n  repositoryUrl: 'https://github.com/user/package',\n  customization: {\n    npmPublish: true,\n    tarballDir: 'dist'\n  }\n})",
  "complex-types": "import type { GlobalConfig, PluginConfig, NpmPluginConfig } from '@bfra.me/semantic-release'\nimport { defineConfig } from '@bfra.me/semantic-release'\n\nconst npmConfig: NpmPluginConfig = {\n  npmPublish: true,\n  tarballDir: 'dist'\n}\n\nconst plugins: PluginConfig[] = [\n  '@semantic-release/commit-analyzer',\n  ['@semantic-release/npm', npmConfig]\n]\n\nconst config: GlobalConfig = {\n  branches: ['main'],\n  repositoryUrl: 'https://github.com/user/typed-repo',\n  plugins\n}\n\nexport default defineConfig(config)"
}
