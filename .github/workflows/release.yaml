# Manages the release process for the bfra.me/works monorepo:
# 1. Creates and manages release PRs using changesets
# 2. Enables auto-merge for release PRs when checks pass
# 3. Publishes packages to npm after successful merge
# Triggers: After main workflow success, weekly schedule, or manual dispatch

name: Release

on:
  schedule:
    - cron: '0 18 * * 0' # Run every Sunday at 6 PM UTC
  workflow_dispatch:
    inputs:
      force-release:
        description: Force release if checks pass
        type: boolean
        default: false
  workflow_run:
    branches: [main]
    types: [completed]
    workflows: [Main]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  manage-release:
    name: Manage Release PR
    env:
      PUBLISH_REF: changeset-release/main
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - id: get-workflow-access-token
        name: Get Workflow Access Token
        uses: actions/create-github-app-token@30bf6253fa41bdc8d1501d202ad15287582246b4 # v2.0.3
        with:
          app-id: ${{ secrets.APPLICATION_ID }}
          private-key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Check for existing release PR
        id: check-pr
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ steps.get-workflow-access-token.outputs.token }}
        run: |
          PR_NUMBER=$(gh pr list \
            --head "$PUBLISH_REF" \
            --json number \
            --jq '.[0].number' \
            --state open)
          if [ -n "$PR_NUMBER" ]; then
            echo "pr-exists=true" >> $GITHUB_OUTPUT
            echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT

            # Check PR status
            STATUS=$(gh pr view $PR_NUMBER --json statusCheckRollup --jq '.statusCheckRollup[].conclusion' | sort -u | grep 'SUCCESS')
            MERGEABLE=$(gh pr view $PR_NUMBER --json mergeStateStatus --jq '.mergeStateStatus')
            echo "PR $PR_NUMBER:"
            echo "- checks status: $STATUS"
            echo "- mergeable status: $MERGEABLE"
            if [ "$STATUS" = "SUCCESS" ]; then
              echo "checks-status=success" >> $GITHUB_OUTPUT
            elif [ "$STATUS" = "PENDING" ]; then
              echo "checks-status=pending" >> $GITHUB_OUTPUT
            else
              echo "checks-status=failed" >> $GITHUB_OUTPUT
            fi
            if [ "$MERGEABLE" = "BEHIND" ] || [ "$MERGEABLE" = "UNKNOWN" ]; then
              echo "mergeable=false" >> $GITHUB_OUTPUT
            else
              echo "mergeable=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "pr-exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Git user
        if: steps.check-pr.outputs.pr-exists == 'true'
        run: |
          git config --global user.email '118100583+bfra-me[bot]@users.noreply.github.com'
          git config --global user.name 'bfra-me[bot]'

      - name: Checkout repository
        if: steps.check-pr.outputs.pr-exists == 'true'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ env.PUBLISH_REF }}
          token: ${{ steps.get-workflow-access-token.outputs.token }}

      - name: Prepare job
        if: steps.check-pr.outputs.pr-exists == 'true'
        uses: ./.github/actions/pnpm-install

      - name: Perform a dry run of `pnpm publish`
        if: steps.check-pr.outputs.pr-exists == 'true'
        run: pnpm -r publish --dry-run --publish-branch ${{ env.PUBLISH_REF }}

      - name: Create Release Pull Request or Publish to npm
        if: steps.check-pr.outputs.pr-exists == 'false' || steps.check-pr.outputs.mergeable == 'false' || github.event.workflow_run.conclusion == 'success'
        env:
          GITHUB_TOKEN: ${{ steps.get-workflow-access-token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        uses: changesets/action@06245a4e0a36c064a573d4150030f5ec548e4fcc # v1.4.10
        with:
          commit: 'chore(changesets): publish packages'
          publish: pnpm publish-changesets
          setupGitUser: false
          title: 'chore(ðŸ¦‹ðŸ“¦): publish packages'
          version: pnpm version-changesets

      # Enable auto-merge for release PRs when checks pass except for workflow_run events
      - name: Enable Auto-merge
        if: >-
          github.event_name != 'workflow_run' &&
          steps.check-pr.outputs.pr-exists == 'true' &&
          (
            steps.check-pr.outputs.checks-status == 'pending' ||
            steps.check-pr.outputs.checks-status == 'success' ||
            inputs.force-release == true
          )
        env:
          GH_TOKEN: ${{ steps.get-workflow-access-token.outputs.token }}
          PR_NUMBER: ${{ steps.check-pr.outputs.pr-number }}
        run: |
          gh pr merge $PR_NUMBER --squash --auto
