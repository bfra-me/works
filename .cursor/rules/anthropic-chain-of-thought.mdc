---
description: USE when PROMPTING Anthropic models to ENHANCE reasoning quality
globs: *.py,*.md,*.mdc,*.ts,*.txt
alwaysApply: false
---
# Anthropic Chain of Thought and XML Tag Best Practices

Standards for incorporating chain of thought reasoning and XML tag structure in prompts for Anthropic models, **especially for complex reasoning, troubleshooting, planning, or multi-step tasks.**

**Why use XML Tags?**
Anthropic models are trained on XML structure. Using these tags helps the model clearly distinguish different parts of your prompt (like instructions, context, examples, and the actual query), leading to more accurate and structured responses. It also makes prompts easier for humans to read and maintain.

<rule>
name: anthropic-chain-of-thought
description: Best practices for chain of thought reasoning and XML tag usage with Anthropic models
filters:
  # Match any text-based files that might contain prompts
  - type: file_extension
    pattern: "\\.(py|md|mdc|ts|txt)$"
  # Match files that look like they contain prompts
  - type: content
    pattern: "(?s)(prompt|instruction|query)"

actions:
  - type: suggest
    message: |
      When crafting prompts for Anthropic models:

      1. Structure your prompts with XML tags for clarity:
         ```xml
         <system>
           Define the AI's role and core capabilities
         </system>

         <context>
           Provide relevant background information
         </context>

         <examples>
           <example>
             <input>User query example</input>
             <thinking>Step-by-step reasoning process</thinking>
             <output>Expected response</output>
           </example>
         </examples>

         <user_query>
           The actual user query
         </user_query>
         ```

      2. Incorporate chain of thought elements:
         ```xml
         <thinking>
           1. First, I'll analyze...
           2. Then, I'll consider...
           3. Based on that, I can conclude...
         </thinking>

         <reasoning>
           Here's my step-by-step approach:
           1. Initial assessment
           2. Key considerations
           3. Trade-offs evaluated
           4. Final decision
         </reasoning>
         ```

      3. Use specialized XML tags:
         - <context> - For background information
         - <thinking> - For internal reasoning steps
         - <reasoning> - For explicit logical chains
         - <quotes> - For direct quotations
         - <examples> - For few-shot learning examples
         - <output> - For final responses
         - <reflection> - For self-assessment
         - <plan> - For outlining approach

      4. Best Practices:
         a. Be explicit about reasoning steps
         b. Break down complex tasks
         c. Show work clearly
         d. Use consistent tag structure
         e. Maintain clear tag hierarchy

      5. Chain of Thought Guidelines:
         - Start with a clear problem understanding
         - Break down complex reasoning
         - Show intermediate steps
         - Explain key decisions
         - Validate conclusions

      ## Related Rules

      - [cursor-rules-creation](mdc:.cursor/rules/cursor-rules-creation.mdc): Provides guidance on structuring prompt content within rules.
      - [ai-agile-workflow](mdc:.cursor/rules/ai-agile-workflow.mdc): Provides a structure for the 'Sequential Thinking' it mandates.
      - [mcp-tools-usage](mdc:.cursor/rules/mcp-tools-usage.mdc): Provides structure for the `Sequential Thinking` tool/approach.
      - [memory-management](mdc:.cursor/rules/memory-management.mdc): Uses structured thinking approach for memory file management.

examples:
  - input: |
      # Bad: No structured reasoning
      What's 123 * 456?

      # Good: Structured chain of thought
      <task>Calculate 123 * 456</task>
      <thinking>
        1. Break into parts: 123 = 100 + 20 + 3
        2. Multiply each part by 456:
           - 100 * 456 = 45,600
           - 20 * 456 = 9,120
           - 3 * 456 = 1,368
        3. Sum the results:
           45,600 + 9,120 + 1,368 = 56,088
      </thinking>
      <output>123 * 456 = 56,088</output>
    output: "Properly structured chain of thought reasoning"

  - input: |
      # Bad: Direct answer without context
      The code has a bug in the loop.

      # Good: Contextual analysis with reasoning
      <context>
        Analyzing a for loop in Python that's showing unexpected behavior
      </context>
      <thinking>
        1. First, check loop conditions
        2. Examine variable scope
        3. Verify iteration logic
        4. Consider edge cases
      </thinking>
      <reasoning>
        The loop counter isn't being incremented properly because...
      </reasoning>
      <solution>
        Modify the increment statement to ensure proper iteration
      </solution>
    output: "Clear reasoning process with context"

  - input: |
      # Task: Plan a blog post about sustainable gardening
      <thinking>
        1.  **Goal:** Outline a blog post about sustainable gardening techniques.
        2.  **Audience:** Beginner gardeners interested in eco-friendly practices.
        3.  **Key Sections:**
            a.  Introduction: Importance of sustainability in gardening.
            b.  Technique 1: Composting - benefits, how-to.
            c.  Technique 2: Water Conservation - rainwater harvesting, drip irrigation.
            d.  Technique 3: Natural Pest Control - companion planting, beneficial insects.
            e.  Technique 4: Soil Health - cover crops, no-till methods.
            f.  Conclusion: Recap, call to action (start small).
        4.  **Structure:** Logical flow from intro to specific techniques, ending with encouragement.
        5.  **Tone:** Informative, encouraging, accessible.
      </thinking>
      <plan>
        **Blog Post Outline: Sustainable Gardening for Beginners**

        1.  **Introduction**
            *   Hook: The joy of gardening meets environmental responsibility.
            *   Why it matters: Reducing waste, conserving water, supporting ecosystems.
            *   What this post covers: Simple, actionable techniques.

        2.  **Composting: Turning Waste into Gold**
            *   Benefits: Reduces landfill waste, enriches soil naturally.
            *   How-to: Simple bin setup, what to compost, balancing greens/browns.

        3.  **Water Wisely: Conservation Techniques**
            *   Rainwater Harvesting: Easy setup options.
            *   Efficient Watering: Drip irrigation, mulching, watering times.

        4.  **Natural Pest & Weed Control**
            *   Companion Planting: Examples (marigolds, basil).
            *   Encouraging Beneficial Insects: Ladybugs, lacewings.
            *   Manual Weed Control vs. Herbicides.

        5.  **Building Healthy Soil**
            *   Cover Crops: Benefits and examples (clover, rye).
            *   No-Till/Reduced Tillage: Protecting soil structure.

        6.  **Conclusion**
            *   Recap of key techniques.
            *   Encouragement: Start with one or two methods.
            *   Call to Action: Share your sustainable gardening journey.
      </plan>
    output: "Structured plan generation using thinking steps"

metadata:
  priority: high
  version: 1.0
  tags:
    - prompt-engineering
    - anthropic
    - chain-of-thought
    - xml-structure
</rule>
