---
description: IMPLEMENT when CONFIGURING Prettier to STANDARDIZE code formatting
globs:
alwaysApply: false
---
# Prettier Config Usage

<rule>
name: prettier_config_usage
description: Guidelines for setting up and customizing @bfra.me/prettier-config in different project environments
filters:
  - type: file_path
    pattern: "\\.prettierrc(\\.js|\\.cjs|\\.mjs|\\.json)?$|prettier\\.config\\.(js|ts|mjs|cjs)$"
  - type: content
    pattern: "bfra\\.me/prettier-config|prettier"

actions:
  - type: suggest
    message: |
      ## @bfra.me/prettier-config Usage Guide

      The `@bfra.me/prettier-config` package provides standardized Prettier configurations with multiple specialized presets for different formatting preferences.

      ### Basic Setup

      #### Package.json Method

      The simplest way to use the default configuration:

      ```json
      // package.json
      {
        "prettier": "@bfra.me/prettier-config"
      }
      ```

      #### Configuration File Method

      For more flexibility, create a configuration file:

      ```javascript
      // prettier.config.js
      import config from '@bfra.me/prettier-config'
      export default config
      ```

      ### Available Presets

      The package provides several specialized presets:

      #### Line Length Presets (named after alcohol proof)

      ```javascript
      // 80 character line width (strictest)
      import config from '@bfra.me/prettier-config/80-proof'
      export default config

      // 100 character line width (default)
      import config from '@bfra.me/prettier-config/100-proof'
      export default config

      // 120 character line width (most relaxed)
      import config from '@bfra.me/prettier-config/120-proof'
      export default config
      ```

      #### Style Presets

      ```javascript
      // With semicolons
      import config from '@bfra.me/prettier-config/semi'
      export default config

      // Combined: Semicolons with 120 character width
      import config from '@bfra.me/prettier-config/semi-120-proof'
      export default config
      ```

      ### Configuration Extension

      You can extend any preset with custom options:

      ```javascript
      // prettier.config.js
      import config from '@bfra.me/prettier-config'

      export default {
        ...config,
        // Your custom overrides
        semi: true,
        tabWidth: 4,
        // Additional configuration
      }
      ```

      ### Default Configuration Details

      The default configuration includes:

      ```javascript
      {
        printWidth: 100,           // 100 characters line width
        semi: false,               // No semicolons
        singleQuote: true,         // Use single quotes
        bracketSpacing: false,     // No spaces in object literals: {id: 5}
        arrowParens: 'avoid',      // Omit parentheses for single param arrow functions
        endOfLine: 'auto',         // Maintain end of line format
        // Plus specialized overrides for specific file types
      }
      ```

      ### VS Code Integration

      1. Install the Prettier extension

      2. Add these settings to your `.vscode/settings.json`:

      ```json
      {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true,
        "prettier.requireConfig": true
      }
      ```

      ### Integration with ESLint

      When using with @bfra.me/eslint-config:

      ```typescript
      // eslint.config.ts
      import { defineConfig } from '@bfra.me/eslint-config'

      export default defineConfig({
        // Enable Prettier integration
        prettier: true,
        // Other configuration...
      })
      ```

      ### Common Issues

      1. **Configuration Conflicts**: The package uses `Object.freeze()` to prevent accidental modification - use spread operator to override
      2. **Path Resolution**: Make sure imports paths are correct for your module system
      3. **Version Compatibility**: Ensure Prettier version matches peer dependency requirement (^3.0.0)

examples:
  - input: |
      I want to use the 120-proof Prettier configuration with semicolons
    output: |
      To set up the 120-proof Prettier configuration with semicolons:

      1. First, install the package:
      ```bash
      pnpm add -D @bfra.me/prettier-config prettier
      ```

      2. Create a `prettier.config.js` file in your project root:
      ```javascript
      // prettier.config.js
      import config from '@bfra.me/prettier-config/semi-120-proof'
      export default config
      ```

      3. Alternatively, if you need ESM compatibility in CommonJS projects:
      ```javascript
      // prettier.config.cjs
      module.exports = require('@bfra.me/prettier-config/semi-120-proof')
      ```

      4. If you want to use the package.json method (less flexible):
      ```json
      {
        "prettier": "@bfra.me/prettier-config/semi-120-proof"
      }
      ```

      5. If you need to customize further, extend the configuration:
      ```javascript
      // prettier.config.js
      import config from '@bfra.me/prettier-config/semi-120-proof'

      export default {
        ...config,
        // Additional customizations
        tabWidth: 4,
        useTabs: false
      }
      ```

      This configuration will use:
      - 120 character line width (more relaxed formatting)
      - Semicolons at the end of statements
      - Single quotes for strings
      - No spaces in object literals
      - Plus all other default configurations from @bfra.me/prettier-config

metadata:
  priority: high
  version: 1.0
  tags:
    - prettier
    - formatting
    - config
  changelog:
    - version: 1.0
      changes:
        - Initial version
</rule>
